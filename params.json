{"name":"Microlog","tagline":"Micro server-side logger for nodejs. ~50 sloc","body":"# Microlog\r\n\r\n[![Build Status](https://travis-ci.org/shuvalov-anton/microlog.svg)](https://travis-ci.org/shuvalov-anton/microlog)\r\n[![Code Climate](https://codeclimate.com/github/shuvalov-anton/microlog/badges/gpa.svg)](https://codeclimate.com/github/shuvalov-anton/microlog)\r\n[![Coverage Status](https://coveralls.io/repos/shuvalov-anton/microlog/badge.png?branch=master)](https://coveralls.io/r/shuvalov-anton/microlog?branch=master)\r\n\r\n[![NPM](https://nodei.co/npm/microlog.png?downloads=true)](https://nodei.co/npm/microlog/)\r\n\r\n\r\nMicro server-side logger for nodejs. ~50 sloc\r\n\r\n![screenshot](https://f.cloud.github.com/assets/1410106/2313997/6a424516-a310-11e3-98f3-0b08946d0170.png)\r\n\r\nWhy to use?\r\n\r\n- Very simle\r\n- ~50 sloc\r\n- Support express like formattings\r\n- Support to add timestamps to logs\r\n- Support to add filenames to logs\r\n- Support `printf` like logging: `log.info('%d port', port)`\r\n- Support colorful logs and `NOCOLOR` env variable that is so useful in some cases\r\n- Support `NOLOG` env variable\r\n- Log methods returns messages to runtime too\r\n- Very simple\r\n\r\n## Install\r\n\r\n```\r\nnpm i -S microlog\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar log = require('microlog')(Object module, [String format], [Boolean logOnRequire]);\r\n```\r\n\r\n- `module` — node.js module link\r\n- `format` — express like formatting string\r\n- `logOnRequire` — write `init` messages to logs\r\n\r\nExample:\r\n\r\n```\r\nvar log = require('microlog')(module);\r\nlog.info('Express listen %s host and %d port', config.get('HOST'), config.get('PORT'));\r\nlog.error('Get error message: %message', message);\r\nlog.debug('Shit! Shit! Shit!11')\r\n```\r\n\r\n### Formatings\r\n\r\n- `:type` — message type: `info`, `debug`, `error`\r\n- `:module` – module name if it exists\r\n- `:message` — message body\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}